From d8776f94b3f272b65db9ba1435267eeaab31665e Mon Sep 17 00:00:00 2001
From: Lei Xu <lei.xu@nxp.com>
Date: Thu, 29 Aug 2024 08:46:03 +0800
Subject: [PATCH] Add support for i.MX93 FRDM board

Signed-off-by: Danwei Luo <danwei.luo@nxp.com>
---
 demos.json                               | 18 +++++++++---------
 scripts/machine_learning/dms/dms_demo.py |  2 +-
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/demos.json b/demos.json
index d88af63..5b40f7d 100644
--- a/demos.json
+++ b/demos.json
@@ -4,7 +4,7 @@
              "name": "Image Classification",
              "id": "obj_class_nn",
              "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/nnstreamer/ml_demo_launcher.py id",
-             "compatible": "imx8mp, imx93, imx8mm, imx8qmmek, imx95",
+             "compatible": "imx8mp, imx93, imx8mm, imx8qmmek, imx95, imx93frdm",
              "screenshot": "image_classification.jpg",
              "icon": "photo-video-solid.svg",
              "description": "Image classification example using NNStreamer. Image classification is an ML task that attempts to comprehend an entire image as a whole. The goal is to classify the image by assigning it to a specific label. Typically, it refers to images in which only one object appears and is analyzed. An internet connection may be required."
@@ -12,7 +12,7 @@
              "name": "Object Detection",
              "id": "obj_detect_nn",
              "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/nnstreamer/ml_demo_launcher.py detect",
-             "compatible": "imx8mp, imx93, imx8mm, imx8qmmek, imx95",
+             "compatible": "imx8mp, imx93, imx8mm, imx8qmmek, imx95, imx93frdm",
              "screenshot": "ml_detect.png",
              "icon": "photo-video-solid.svg",
              "description": "Object detection example using NNStreamer. Object detection is the ML task that detects instances of objects of a certain class within an image. A bounding box and a class label are found for each detected object. An internet connection may be required."
@@ -36,7 +36,7 @@
              "name": "Selfie Segmenter",
              "id": "selfie_nn",
              "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/selfie_segmenter/selfie_segmenter.py",
-             "compatible": "imx8mp, imx93",
+             "compatible": "imx8mp, imx93, imx93frdm",
              "screenshot": "selfie_segmenter.jpg",
              "icon": "photo-video-solid.svg",
              "description": "Selfie Segmenter showcases the ML capabilities of i.MX 8M Plus and i.MX 93 by using the NPU to accelerate an instance segmentation model. This model lets you segment the portrait of a person and can be used to replace or modify the background of an image. An internet connection is required."
@@ -44,7 +44,7 @@
               "name": "i.MX Smart Fitness",
               "id": "imx-smart-fitness",
               "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/imx_smart_fitness/imx_smart_fitness.py",
-              "compatible": "imx8mp, imx93",
+              "compatible": "imx8mp, imx93, imx93frdm",
               "screenshot": "imx-smart-fitness.jpg",
               "icon": "photo-video-solid.svg",
               "description": "i.MX Smart Fitness showcases the i.MX' Machine Learning capabilities by using an NPU to accelerate two Deep Learning vision-based models. Together, these models detect a person present in the scene and predict 33 3D-keypoints to generate a complete body landmark, known as pose estimation. From the pose estimation, a K-NN pose classifier classifies two different body poses: 'Squat-Down' and 'Squat-Up'. The application tracks the 'squats' fitness exercise and the repetition counter is set to 12 repetitions in an infinite loop."
@@ -52,7 +52,7 @@
         "TFLite":[{
             "name": "ML Benchmark",
             "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/ml_benchmark/ml_benchmark.py",
-            "compatible": "imx8mp, imx93",
+            "compatible": "imx8mp, imx93, imx93frdm",
             "screenshot": "ml_benchmark.jpg",
             "icon": "cogs-solid.svg",
             "description": "This tool allows to easily compare the performance of TensorFlow Lite models running on CPU (Cortex-A) and NPU. The tool works on i.MX 93 and i.MX 8M Plus."
@@ -69,7 +69,7 @@
             "name": "DMS",
             "id": "dms",
             "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/dms/launcher.py",
-            "compatible": "imx8mp, imx93",
+            "compatible": "imx8mp, imx93, imx93frdm",
             "screenshot": "dms.jpg",
             "icon": "photo-video-solid.svg",
             "description": "An example over how to implement a Driver Monitoring System (DMS) using the NPU. An internet connection is required."
@@ -101,7 +101,7 @@
             "source": "",
             "icon": "photo-video-solid.svg",
             "screenshot": "gst_test_src_screenshot.jpg",
-            "compatible": "imx7ulp, imx8ulp, imx8qxpc0mek, imx8qmmek, imx8mq, imx8mm, imx8mn, imx8mp, imx93",
+            "compatible": "imx7ulp, imx8ulp, imx8qxpc0mek, imx8qmmek, imx8mq, imx8mm, imx8mn, imx8mp, imx93, imx93frdm",
             "description": "This is a simple demo utility that allows users to play back video captured on a camera or a test source."
         },{
             "name": "Camera using VPU",
@@ -197,7 +197,7 @@
             "source": "",
             "icon": "smart-kitchen-icon.svg",
             "screenshot": "smart-kitchen-screenshot.jpg",
-            "compatible": "imx8mm, imx8mp, imx93",
+            "compatible": "imx8mm, imx8mp, imx93, imx93frdm",
             "description": "This application simulates a smart kitchen controlled by voice commands using NXP's Voice Intelligent Technology (VIT). How to use: First say a wakeword to select a kitchen's item (hood, oven or aircon) and then say one of the item's available commands (e.g. \"Hey hood, light on\"). WakeWords supported are HEY HOOD, HEY OVEN, HEY AIRCON. Global Commands are ENTER, EXIT, RUN DEMO, STOP DEMO. Hood commands are FAN OFF, FAN ON, FAN LOW, FAN HIGH, LIGHT OFF, LIGHT ON. Aircon commands are DRY MODE, COOL MODE, FAN MODE SWING OFF, SWING ON, FAN LOW, FAN HIGH. Oven commands are CLOSE DOOR, OPEN DOOR. The item's functions can also be activated by clicking on the item's controls using a mouse or touchscreen."
         },
         {
@@ -207,7 +207,7 @@
              "source": "",
              "icon": "ebike-vit-icon.svg",
              "screenshot": "ebike-vit-screenshot.jpg",
-             "compatible": "imx8mm, imx8mp, imx93",
+             "compatible": "imx8mm, imx8mp, imx93, imx93frdm",
              "description": "This application simulates a ebike controlled by voice commands using NXP's Voice Intelligent Technology (VIT). First say a wakeword to wake up ebike and then say one of the available commands.The supported wake words are HEY NXP, HEY E-Bike. Global Commands are NEXT PAGE, LAST PAGE, RUN DEMO, STOP DEMO. The page can also be switched by clicking on the UI using a mouse or touchscreen."
 	}]
     }]
diff --git a/scripts/machine_learning/dms/dms_demo.py b/scripts/machine_learning/dms/dms_demo.py
index c33fe6a..e4ba91f 100644
--- a/scripts/machine_learning/dms/dms_demo.py
+++ b/scripts/machine_learning/dms/dms_demo.py
@@ -187,7 +187,7 @@ class DMSDemo:
             + "name=comp sink_1::xpos=0 sink_1::ypos=0 "
             + "sink_0::xpos=840 sink_0::ypos=4 ! cairooverlay name=drawer ! "
             + "queue max-size-buffers=2 leaky=2 ! waylandsink "
-            + "window_width=1920 window-height=1080 "
+            + "window_width=1280 window-height=720 "
             + "cam. ! queue max-size-buffers=2 leaky=2 ! "
             + videoconvert
             + "video/x-raw,height="
-- 
2.25.1

